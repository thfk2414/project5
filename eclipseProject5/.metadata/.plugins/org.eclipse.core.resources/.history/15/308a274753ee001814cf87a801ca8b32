package com.javalec.frontcontroller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.javalec.member.Action;
import com.javalec.member.ActionForward;
import com.javalec.member.MemberJoinAction;
import com.javalec.member.MemberLoginAction;

//@WebServlet("/Join")
public class MemberFrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public MemberFrontController() {
		super();
		// TODO Auto-generated constructor stub
	}

	protected void doProcess(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 넘어온 커맨트 추출, request로부터 URL을 얻어옴. 얻어온 URL에서 명령어를 분리하는 작업을 함.
		String RequestURI = request.getRequestURI();
		String contextPath = request.getContextPath();
		String command = RequestURI.substring(contextPath.length());

		// URL, command 확인
		ActionForward forward = null;
		Action action = null;

		if (command.equals("/loginForm.bo")) { // ==========================================로그인 관련
			System.out.println("로그인");
			action = new MemberLoginAction();
			try {
				forward = action.execute(request, response);
			} catch (Exception e) {
				e.printStackTrace(); // end doProcess
			}
		} else if (command.equals("/joinForm.bo")) { // 회원가입
			System.out.println("회원가입");
			action = new MemberJoinAction();
			try {
				forward = action.execute(request, response);
			} catch (Exception e) {
				e.printStackTrace(); // end doProcess
			}

		}

		/*
		 * 화면이동: isRedirect() 값에 따라 sendRediect 또는 forward 사용 sendRediect: 새로운 페이지에서는
		 * request와 response객체가 새롭게 생성 forward : 현재 실행중인 페이지와 forwad에 의해 호출될 페이지는
		 * request와 response 객체 공유
		 */
		if (forward.isRedirect()) {
			response.sendRedirect(forward.getPath());
		} else {
			RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());
			dispatcher.forward(request, response);
		}

	}

	/*
	 * Get 방식 일 경우 doGet
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);
	}

	/*
	 * Post 방식 일 경우 doPost
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);
	}

}
